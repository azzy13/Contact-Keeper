{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, CLEAR_CURRENT, CLEAR_FILTER, UPDATE_CONTACT, FILTER_CONTACT, SET_CURRENT, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload)\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACT:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/azhar/Desktop/Projects/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","CLEAR_CURRENT","CLEAR_FILTER","UPDATE_CONTACT","FILTER_CONTACT","SET_CURRENT","CONTACT_ERROR","state","action","type","contacts","filter","contact","_id","payload","current","filtered","map","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,WAPF,EAQEC,aARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeC,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAD5B;AAFL,OAAP;;AAMF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACM,OAA3B;AAFL,OAAP;;AAIF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELQ,QAAAA,OAAO,EAAEP,MAAM,CAACM;AAFX,OAAP;;AAIF,SAAKb,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELQ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELS,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAoBL,OAAD,IAC3BA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAA/B,GAAqCL,MAAM,CAACM,OAA5C,GAAsDF,OAD9C;AAFL,OAAP;;AAMF,SAAKR,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELS,QAAAA,QAAQ,EAAET,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACM,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOF,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELgB,QAAAA,KAAK,EAAEf,MAAM,CAACM;AAFT,OAAP;;AAIF;AACE,aAAOP,KAAP;AAjDJ;AAmDD,CApDD","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  CLEAR_CURRENT,\r\n  CLEAR_FILTER,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  SET_CURRENT,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload._id ? action.payload : contact\r\n        ),\r\n      };\r\n    case FILTER_CONTACT:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}