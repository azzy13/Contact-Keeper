{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azhar\\\\Desktop\\\\Projects\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, CLEAR_CURRENT, CLEAR_FILTER, UPDATE_CONTACT, FILTER_CONTACT, SET_CURRENT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Dhiru',\n      email: 'iamrandi@gmail.com',\n      phone: '420-420-6969',\n      type: 'personal'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n  //Clear Filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/azhar/Desktop/Projects/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","CLEAR_CURRENT","CLEAR_FILTER","UPDATE_CONTACT","FILTER_CONTACT","SET_CURRENT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,WAPF,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,oBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,CADS;AAUnBC,IAAAA,OAAO,EAAE;AAVU,GAArB;AAaA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CAd8B,CAgB9B;;AACA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,CAACD,EAAL,EAAb;AACAsB,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEf,WAAR;AAAqBqB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAHD,CAjB8B,CAsB9B;;;AACA,QAAME,aAAa,GAAIX,EAAD,IAAQ;AAC5BO,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEd,cAAR;AAAwBoB,MAAAA,OAAO,EAAEV;AAAjC,KAAD,CAAR;AACD,GAFD,CAvB8B,CA2B9B;;;AACA,QAAMY,UAAU,GAAIH,OAAD,IAAa;AAC9BF,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAET,WAAR;AAAqBe,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAFD,CA5B8B,CAgC9B;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzBN,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACD,GAFD,CAjC8B,CAqC9B;;;AACA,QAAMuB,aAAa,GAAIL,OAAD,IAAa;AACjCF,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEX,cAAR;AAAwBiB,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAAR;AACD,GAFD,CAtC8B,CA0C9B;AAEA;;;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAELM,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFV;AAGLG,MAAAA,UAHK;AAILG,MAAAA,aAJK;AAKLC,MAAAA,UALK;AAMLC,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGhB,KAAK,CAACkB,QAVT,CADF;AAcD,CA5DD;;AA8DA,eAAenB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  CLEAR_CURRENT,\r\n  CLEAR_FILTER,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  SET_CURRENT,\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'Dhiru',\r\n        email: 'iamrandi@gmail.com',\r\n        phone: '420-420-6969',\r\n        type: 'personal',\r\n      },\r\n    ],\r\n    current: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //Add Contact\r\n  const addContact = (contact) => {\r\n    contact.id = uuid.v4();\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n  };\r\n\r\n  //Delete Contact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  //Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  //Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  //Update Contact\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  //Filter Contacts\r\n\r\n  //Clear Filter\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}